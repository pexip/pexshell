name: Prepare Rust
description: Setup Rust and Caching
inputs:
  cache-id:
    description: name of the cache
    required: true
  rust-version:
    description: Rust toolchain specification -- see https://rust-lang.github.io/rustup/concepts/toolchains.html#toolchain-specification
    required: false
    default: "stable"
  rust-components:
    description: Comma-separated string of components to be additionally installed
    required: false
  rust-targets:
    description: Comma-separated string of additional targets to install
    required: false
  cargo-install:
    description: Comma-separated list of crates to cargo install
    required: false
runs:
  using: "composite"
  steps:
    - id: toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.rust-version }}
        components: ${{ inputs.rust-components }}
        targets: ${{ inputs.rust-targets }}
    - name: Calculate vars
      id: vars
      run: |
        import os
        from datetime import datetime
        from hashlib import sha256

        with open(os.environ["GITHUB_OUTPUT"], "a") as github_output:
            current_date = datetime.today().strftime('%Y-%m-%d')
            github_output.write(f"CURRENT_DATE={current_date}\n")

            crates = sorted(os.environ["crates"].split(","))
            crates_hash = sha256("\n".join(crates).encode()).hexdigest()
            github_output.write(f"CRATES_HASH={crates_hash}\n")
      env:
        crates: ${{ inputs.cargo-install }}
      shell: python3
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry/index/
        key: regindex-${{ runner.os }}-${{ steps.vars.outputs.CURRENT_DATE }}
        restore-keys: |
          regindex-${{ runner.os }}-
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          ~/.cargo/.crates.toml
          ~/.cargo/.crates2.json
        key: deps-${{ runner.os }}-${{ steps.vars.outputs.CRATES_HASH }}-${{ steps.vars.outputs.CURRENT_DATE }}
        restore-keys: |
          deps-${{ runner.os }}-${{ steps.vars.outputs.CRATES_HASH }}-
    - uses: actions/cache@v3
      with:
        path: |
          target/
        key: target-${{ runner.os }}-${{ steps.toolchain.outputs.cachekey }}-${{ inputs.cache-id }}-${{ hashFiles('**/Cargo.toml', '**/Cargo.lock') }}
    # Declares the repository safe and not under dubious ownership.
    - name: Add repository to git safe directories
      run: git config --global --add safe.directory $GITHUB_WORKSPACE
      shell: bash
    - name: "Display rust and cargo version"
      run: rustc --version && cargo --version
      shell: bash
    - name: Install dependencies
      if: inputs.cargo-install != ''
      run: cargo install ${crates//,/ }
      env:
        crates: ${{ inputs.cargo-install }}
      shell: bash
    - name: "Install musl"
      if: runner.os == 'Linux'
      run: sudo apt-get install -y musl musl-dev musl-tools
      shell: bash
